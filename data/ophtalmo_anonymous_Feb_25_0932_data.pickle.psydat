ccopy_reg
_reconstructor
p1
(cpsychopy.data
TrialHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'origin'
p6
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a\u000aUne expérience simple de mesure de l'acuité en fonction de l'eccentricité\u000a\u000a"""\u000aexperiment = 'ophtalmo'\u000a\u000aimport numpy as np\u000a# Import key parts of the PsychoPy library:\u000afrom psychopy import visual, core, event, gui, misc, data\u000a\u000a\u000aN_taille, taille_0 = 5, 1.\u000aN_ecc = 3\u000a\u000aN_trial_per_condition = 6 \u000aN_trial = N_ecc * N_taille * N_trial_per_condition / 2\u000a\u000acore_wait = 0.400\u000acore_wait_stim = 0.200\u000a\u000a#if no file use some defaults\u000ainfo = {}\u000ainfo['observer'] = 'anonymous'\u000ainfo['screen_width'] = 51.5\u000ainfo['screen_distance'] = 57.\u000ainfo['N_trial_per_condition'] = N_trial_per_condition\u000a\u000a\u000atry:\u000a    dlg = gui.DlgFromDict(info)\u000aexcept:\u000a    print('Could not load gui... running with defaut parameters')\u000a    print(info)\u000a\u000aimport time\u000ainfo['timeStr'] = time.strftime("%b_%d_%H%M", time.localtime())\u000afileName = 'data/' + experiment + '_' + info['observer'] + '_' + info['timeStr'] + '.pickle'\u000a#save to a file for future use (ie storing as defaults)\u000aif dlg.OK:\u000a    misc.toFile(fileName, info)\u000aelse:\u000a    print('Interrupted gui... quitting')\u000a    core.quit() #user cancelled. quit\u000a\u000a# Create a visual window:\u000awin = visual.Window(fullscr=True)\u000a\u000ainstructions = u"""\u000a\u000aLe but de cette expérience est de distinguer la lettre qui est présentée\u000atout en gardant l'oeil fixé sur la croix centrale.\u000a\u000aA la présentation d'un symbole "?", répondez avec:\u000a    - la touche "<" (gauche) pour le caractère "3" (ou "E" inversée)\u000a    - la touche ">" (droite) pour le caractère "E"\u000a\u000aATTENTION: certaines fois la tache va etre très difficile.Il faut tout \u000ade meme repondre en essayant de ne pas donner toujours la meme reponse\u000a\u000aPressez sur une de ces 2 touches pour continuer...\u000a\u000a"""\u000a\u000a# Objets correspondant à la croix de fixation, à la consigne de réponse et aux instructions:\u000await_for_next = visual.TextStim(win, \u000a                        text = u"+", units='norm', height=0.15, color='white',\u000a                        pos=[0., -0.], alignHoriz='center', alignVert='center' ) \u000await_for_response = visual.TextStim(win, \u000a                        text = u"?", units='norm', height=0.15, color='DarkSlateBlue',\u000a                        pos=[0., -0.], alignHoriz='center', alignVert='center' ) \u000ainstructions_txt = visual.TextStim(win, \u000a                        text = instructions, units='norm', height=0.05, color='BlanchedAlmond',\u000a                        pos=[0., -0.], alignHoriz='center', alignVert='center' ) \u000a\u000adef getResponse():\u000a    event.clearEvents() # clear the event buffer to start with\u000a    resp = None#initially\u000a    while True: # forever until we return a keypress\u000a        for key in event.getKeys():\u000a            #quit\u000a            if key in ['escape', 'q']:\u000a                win.close()\u000a                core.quit()\u000a                return None\u000a            #valid response - check to see if correct\u000a            elif key in ['left', 'right']:\u000a                if key in ['left'] :return 0\u000a                else: return 1\u000a            else:\u000a                visual.TextStim(win, "pressez < ou > (ou Esc pour sortir) (mais pas %s)" %key, height=0.05, color='red').draw()\u000a                win.flip()\u000a\u000a# http://www.psychopy.org/general/units.html\u000adef angle2cm(size_in_deg, screen_distance):\u000a    return 2* screen_distance * np.tan(size_in_deg * np.pi / 180. / 2.)\u000a\u000adef angle2norm(size_in_deg, screen_distance, screen_width):\u000a    return angle2cm(size_in_deg, screen_distance) / screen_width * 2\u000a\u000adef presentStimulus(consigne, eccen, taille):\u000a    """Present stimulus\u000a    """\u000a    stim = visual.TextStim(win, text=u"E", units='norm', height=angle2norm(taille, info['screen_distance'], info['screen_width']), color='black',\u000a                        pos=[angle2norm(eccen, info['screen_distance'], info['screen_width']), 0], alignHoriz='center', alignVert='center',\u000a                        flipHoriz=not(consigne))\u000a    stim.draw()\u000a\u000a# initialisation: on montre les instructions\u000ainstructions_txt.draw()\u000awin.flip()\u000agetResponse()\u000a\u000a\u000a#create your list of stimuli\u000astimList = []\u000afor eccen in np.hstack((np.linspace(-15., -5., N_ecc, endpoint=True), np.linspace(5., 15., N_ecc, endpoint=True))):\u000a    for taille in np.logspace(-1.5, 1.5, N_taille, endpoint=True, base=2) * taille_0: # en degrés d'angle visuel\u000a        for consigne in [0, 1]:\u000a            stimList.append( \u000a                {'eccen':eccen, 'taille':taille, 'consigne':consigne} #this is a python 'dictionary'\u000a                )\u000a\u000a#organise them with the trial handler\u000atrials = data.TrialHandler(stimList, info['N_trial_per_condition'])\u000atrials.data.addDataType('result')#this will help store things with the stimuli\u000a\u000a# on commence l'expérience\u000afor trial in trials:\u000a    # fixation\u000a    wait_for_next.draw()\u000a    win.flip()\u000a    core.wait(core_wait)\u000a    # stimulus\u000a    wait_for_next.draw()\u000a    presentStimulus(trial['consigne'], trial['eccen'], trial['taille'])\u000a    win.flip()\u000a    # réponse\u000a    core.wait(core_wait_stim)\u000a    wait_for_response.draw()\u000a    win.flip()\u000a    #result = getResponse()\u000a    response = getResponse()\u000a    if response == consigne: result=1\u000a    else: result = 0\u000a    trials.data.add('result', result) \u000a\u000awin.update()\u000acore.wait(0.5)\u000awin.close()\u000a\u000a#save data\u000atrials.printAsText(stimOut=['eccen', 'taille', 'consigne'], #write summary data to screen \u000a                  dataOut=['result_raw'])\u000atrials.saveAsExcel(fileName=fileName.replace('.pickle', ''), # ...or an xlsx file (which supports sheets)\u000a                  sheetName = 'rawData',\u000a                  stimOut=['eccen', 'taille', 'consigne'], \u000a                  dataOut=['result_raw'])\u000atrials.saveAsPickle(fileName=fileName.replace('.pickle', '_data.pickle'))#this saves a copy of the whole object  
p7
sS'thisTrial'
p8
(lp9
sS'_exp'
p10
NsS'name'
p11
S''
sS'originPath'
p12
S'/Users/montagnini.a/WORK/PROJECTS/ECOLE/SVT_projet_vision.py/SVT_projet_vision_exp2.py'
p13
sS'thisRepN'
p14
I1
sS'autoLog'
p15
I01
sS'extraInfo'
p16
NsS'data'
p17
g1
(cpsychopy.data
DataHandler
p18
c__builtin__
dict
p19
(dp20
S'ran'
p21
cnumpy.ma.core
_mareconstruct
p22
(cnumpy.ma.core
MaskedArray
p23
cnumpy
ndarray
p24
(I0
tp25
S'b'
tRp26
(I1
(I60
I1
tcnumpy
dtype
p27
(S'f4'
I0
I1
tRp28
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p29
g22
(g23
g24
g25
S'b'
tRp30
(I1
(I60
I1
tg28
I00
S'\x00\x00TB\x00\x00$B\x00\x00\x00B\x00\x00@B\x00\x00\x10A\x00\x00\xb0A\x00\x00XB\x00\x00\x00@\x00\x00\xe8A\x00\x00\x10B\x00\x00PB\x00\x00\x90A\x00\x00 A\x00\x00@@\x00\x00\x08B\x00\x00\xc0@\x00\x00dB\x00\x008B\x00\x00\xa8A\x00\x00(B\x00\x00\x80A\x00\x00\x00A\x00\x00hB\x00\x00pA\x00\x00\xd0A\x00\x00\x80?\x00\x00\xf8A\x00\x00PA\x00\x00\x04B\x00\x004B\x00\x00lB\x00\x00@A\x00\x00`A\x00\x00\xa0@\x00\x00HB\x00\x00LB\x00\x00\x98A\x00\x00<B\x00\x00`B\x00\x000B\x00\x00DB\x00\x00\\B\x00\x00\xb8A\x00\x00\x14B\x00\x00\x18B\x00\x00\x88A\x00\x00\xe0A\x00\x00\xa0A\x00\x00\xd8A\x00\x00\xe0@\x00\x00\xf0A\x00\x00\xc8A\x00\x00\x1cB\x00\x00\xc0A\x00\x000A\x00\x00\x0cB\x00\x00 B\x00\x00\x80@\x00\x00\x00\x00\x00\x00,B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'result'
p31
g22
(g23
g24
g25
S'b'
tRp32
(I1
(I60
I1
tg28
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp33
(dp34
S'isNumeric'
p35
(dp36
g21
I01
sg29
I01
sg31
I01
ssS'trials'
p37
g4
sS'dataTypes'
p38
(lp39
g21
ag29
ag31
asS'dataShape'
p40
(lp41
I60
aI1
asbsS'method'
p42
S'random'
p43
sS'sequenceIndices'
p44
cnumpy.core.multiarray
_reconstruct
p45
(g24
(I0
tS'b'
tRp46
(I1
(I60
I1
tg27
(S'i4'
I0
I1
tRp47
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S':\x00\x00\x00\x19\x00\x00\x00\x07\x00\x00\x00\r\x00\x00\x009\x00\x00\x00!\x00\x00\x00\x0f\x00\x00\x001\x00\x00\x00\x15\x00\x00\x00\x04\x00\x00\x00\x0c\x00\x00\x006\x00\x00\x00\x1f\x00\x00\x00\x1b\x00\x00\x00 \x00\x00\x00\x17\x00\x00\x00\x14\x00\x00\x00-\x00\x00\x00\x0b\x00\x00\x00$\x00\x00\x00/\x00\x00\x00\x12\x00\x00\x00\x05\x00\x00\x00*\x00\x00\x005\x00\x00\x003\x00\x00\x00\x18\x00\x00\x000\x00\x00\x00.\x00\x00\x00\x08\x00\x00\x002\x00\x00\x00\x1a\x00\x00\x00\x02\x00\x00\x00\x1c\x00\x00\x00\x0e\x00\x00\x007\x00\x00\x00\t\x00\x00\x00+\x00\x00\x00,\x00\x00\x004\x00\x00\x008\x00\x00\x00\x01\x00\x00\x00\x13\x00\x00\x00;\x00\x00\x00\'\x00\x00\x00\x1d\x00\x00\x00\x11\x00\x00\x00%\x00\x00\x00\x03\x00\x00\x00(\x00\x00\x00"\x00\x00\x00#\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00)\x00\x00\x00&\x00\x00\x00\x10\x00\x00\x00\x16\x00\x00\x00\x1e\x00\x00\x00'
tbsS'finished'
p48
I01
sS'nReps'
p49
I1
sS'nRemaining'
p50
I-1
sS'trialList'
p51
(lp52
g1
(cpsychopy.data
TrialType
p53
g19
(dp54
S'consigne'
p55
I0
sS'taille'
p56
cnumpy.core.multiarray
scalar
p57
(g27
(S'f8'
I0
I1
tRp58
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xcd;\x7ff\x9e\xa0\xd6?'
tRp59
sS'eccen'
p60
g57
(g58
S'\x00\x00\x00\x00\x00\x00.\xc0'
tRp61
stRp62
ag1
(g53
g19
(dp63
g55
I1
sg56
g59
sg60
g61
stRp64
ag1
(g53
g19
(dp65
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp66
sg60
g61
stRp67
ag1
(g53
g19
(dp68
g55
I1
sg56
g66
sg60
g61
stRp69
ag1
(g53
g19
(dp70
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp71
sg60
g61
stRp72
ag1
(g53
g19
(dp73
g55
I1
sg56
g71
sg60
g61
stRp74
ag1
(g53
g19
(dp75
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp76
sg60
g61
stRp77
ag1
(g53
g19
(dp78
g55
I1
sg56
g76
sg60
g61
stRp79
ag1
(g53
g19
(dp80
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp81
sg60
g61
stRp82
ag1
(g53
g19
(dp83
g55
I1
sg56
g81
sg60
g61
stRp84
ag1
(g53
g19
(dp85
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\xd6?'
tRp86
sg60
g57
(g58
S'\x00\x00\x00\x00\x00\x00$\xc0'
tRp87
stRp88
ag1
(g53
g19
(dp89
g55
I1
sg56
g86
sg60
g87
stRp90
ag1
(g53
g19
(dp91
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp92
sg60
g87
stRp93
ag1
(g53
g19
(dp94
g55
I1
sg56
g92
sg60
g87
stRp95
ag1
(g53
g19
(dp96
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp97
sg60
g87
stRp98
ag1
(g53
g19
(dp99
g55
I1
sg56
g97
sg60
g87
stRp100
ag1
(g53
g19
(dp101
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp102
sg60
g87
stRp103
ag1
(g53
g19
(dp104
g55
I1
sg56
g102
sg60
g87
stRp105
ag1
(g53
g19
(dp106
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp107
sg60
g87
stRp108
ag1
(g53
g19
(dp109
g55
I1
sg56
g107
sg60
g87
stRp110
ag1
(g53
g19
(dp111
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\xd6?'
tRp112
sg60
g57
(g58
S'\x00\x00\x00\x00\x00\x00\x14\xc0'
tRp113
stRp114
ag1
(g53
g19
(dp115
g55
I1
sg56
g112
sg60
g113
stRp116
ag1
(g53
g19
(dp117
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp118
sg60
g113
stRp119
ag1
(g53
g19
(dp120
g55
I1
sg56
g118
sg60
g113
stRp121
ag1
(g53
g19
(dp122
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp123
sg60
g113
stRp124
ag1
(g53
g19
(dp125
g55
I1
sg56
g123
sg60
g113
stRp126
ag1
(g53
g19
(dp127
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp128
sg60
g113
stRp129
ag1
(g53
g19
(dp130
g55
I1
sg56
g128
sg60
g113
stRp131
ag1
(g53
g19
(dp132
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp133
sg60
g113
stRp134
ag1
(g53
g19
(dp135
g55
I1
sg56
g133
sg60
g113
stRp136
ag1
(g53
g19
(dp137
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\xd6?'
tRp138
sg60
g57
(g58
S'\x00\x00\x00\x00\x00\x00\x14@'
tRp139
stRp140
ag1
(g53
g19
(dp141
g55
I1
sg56
g138
sg60
g139
stRp142
ag1
(g53
g19
(dp143
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp144
sg60
g139
stRp145
ag1
(g53
g19
(dp146
g55
I1
sg56
g144
sg60
g139
stRp147
ag1
(g53
g19
(dp148
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp149
sg60
g139
stRp150
ag1
(g53
g19
(dp151
g55
I1
sg56
g149
sg60
g139
stRp152
ag1
(g53
g19
(dp153
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp154
sg60
g139
stRp155
ag1
(g53
g19
(dp156
g55
I1
sg56
g154
sg60
g139
stRp157
ag1
(g53
g19
(dp158
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp159
sg60
g139
stRp160
ag1
(g53
g19
(dp161
g55
I1
sg56
g159
sg60
g139
stRp162
ag1
(g53
g19
(dp163
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\xd6?'
tRp164
sg60
g57
(g58
S'\x00\x00\x00\x00\x00\x00$@'
tRp165
stRp166
ag1
(g53
g19
(dp167
g55
I1
sg56
g164
sg60
g165
stRp168
ag1
(g53
g19
(dp169
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp170
sg60
g165
stRp171
ag1
(g53
g19
(dp172
g55
I1
sg56
g170
sg60
g165
stRp173
ag1
(g53
g19
(dp174
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp175
sg60
g165
stRp176
ag1
(g53
g19
(dp177
g55
I1
sg56
g175
sg60
g165
stRp178
ag1
(g53
g19
(dp179
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp180
sg60
g165
stRp181
ag1
(g53
g19
(dp182
g55
I1
sg56
g180
sg60
g165
stRp183
ag1
(g53
g19
(dp184
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp185
sg60
g165
stRp186
ag1
(g53
g19
(dp187
g55
I1
sg56
g185
sg60
g165
stRp188
ag1
(g53
g19
(dp189
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\xd6?'
tRp190
sg60
g57
(g58
S'\x00\x00\x00\x00\x00\x00.@'
tRp191
stRp192
ag1
(g53
g19
(dp193
g55
I1
sg56
g190
sg60
g191
stRp194
ag1
(g53
g19
(dp195
g55
I0
sg56
g57
(g58
S'\x15\xb71\n\xfe\x06\xe3?'
tRp196
sg60
g191
stRp197
ag1
(g53
g19
(dp198
g55
I1
sg56
g196
sg60
g191
stRp199
ag1
(g53
g19
(dp200
g55
I0
sg56
g57
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp201
sg60
g191
stRp202
ag1
(g53
g19
(dp203
g55
I1
sg56
g201
sg60
g191
stRp204
ag1
(g53
g19
(dp205
g55
I0
sg56
g57
(g58
S'\xad\xd3Z\x99\x9f\xe8\xfa?'
tRp206
sg60
g191
stRp207
ag1
(g53
g19
(dp208
g55
I1
sg56
g206
sg60
g191
stRp209
ag1
(g53
g19
(dp210
g55
I0
sg56
g57
(g58
S'\xcd;\x7ff\x9e\xa0\x06@'
tRp211
sg60
g191
stRp212
ag1
(g53
g19
(dp213
g55
I1
sg56
g211
sg60
g191
stRp214
asS'seed'
p215
NsS'thisIndex'
p216
g57
(g47
S'\x1e\x00\x00\x00'
tRp217
sS'thisN'
p218
I60
sS'thisTrialN'
p219
I0
sS'nTotal'
p220
I60
sS'_warnUseOfNext'
p221
I01
sb.